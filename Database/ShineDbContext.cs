using Microsoft.EntityFrameworkCore;

namespace Shine.Database
{
    public sealed class ShineDbContext : DbContext
    {
        public ShineDbContext(DbContextOptions<ShineDbContext> options)
            : base(options)
        { }

        public DbSet<Entry> Entries { get; set; }
        
        public DbSet<Profile> Profiles { get; set; }
        
        public DbSet<Tourney> Tourneys { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            // generated by scaffold
            modelBuilder.HasCharSet("latin1")
                .UseCollation("latin1_swedish_ci");

            modelBuilder.Entity<Entry>(entity =>
            {
                entity.ToTable("entries");

                entity.Property(e => e.Id).HasColumnName("entryid");

                entity.Property(e => e.PlayerId).HasColumnName("playerid");

                entity.Property(e => e.TourneyId).HasColumnName("tourneyid");
            });

            modelBuilder.Entity<Profile>(entity =>
            {
                entity.HasKey(e => e.PlayerId)
                    .HasName("PRIMARY");

                entity.ToTable("profiles");

                entity.HasComment("Stores player profiles")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.PlayerId).HasColumnName("playerid");

                entity.Property(e => e.FullName)
                    .IsRequired()
                    .HasMaxLength(70)
                    .HasColumnName("fullname");

                entity.Property(e => e.IconId).HasColumnName("icon");

                entity.Property(e => e.Tag)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("tag");

                entity.Property(e => e.Town)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasColumnName("town")
                    .HasDefaultValueSql("'SmashVille'");
            });

            modelBuilder.Entity<Tourney>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("tourneys");

                entity.Property(e => e.EntrantCap).HasColumnName("tourneycap");

                entity.Property(e => e.Id).HasColumnName("tourneyid");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(70)
                    .HasColumnName("tourneyname")
                    .UseCollation("utf8_general_ci")
                    .HasCharSet("utf8");

                entity.Property(e => e.Start)
                    .HasColumnType("datetime")
                    .HasColumnName("tourneystart");
            });
        }
    }
}
